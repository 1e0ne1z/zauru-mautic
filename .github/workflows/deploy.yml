name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Create VPS if it doesn't exist
      id: create-vps
      run: |
        if ! doctl compute droplet list | grep -q 'mautic-vps'; then
          doctl compute droplet create mautic-vps --image docker-20-04 --size s-1vcpu-1gb --region nyc1 --ssh-keys ${{ secrets.DIGITALOCEAN_SSH_FINGERPRINT }} --wait --user-data-file setup.sh --enable-monitoring
          echo "droplet_created=true" >> $GITHUB_ENV
        else
          echo "Droplet 'mautic-vps' already exists."
          echo "droplet_created=true" >> $GITHUB_ENV
        fi

    - name: Get Droplet IP
      id: get-droplet-ip
      run: |
        while [ -z "$IP" ]; do
          echo "Waiting for droplet to be ready..."
          sleep 5
          IP=$(doctl compute droplet get mautic-vps --format PublicIPv4 --no-header)
        done
        echo "ip=$IP" >> $GITHUB_ENV

    # - name: Login to GitHub Packages
    #   uses: docker/login-action@v3
    #   with:
    #     registry: docker.pkg.github.com
    #     username: ${{ github.repository_owner }}
    #     password: ${{ secrets.PACKAGE_GITHUB_TOKEN }}

    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: .
    #     push: true
    #     tags: docker.pkg.github.com/${{ github.repository }}/user/app:latest

    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc --delete"
        SOURCE: "."
        REMOTE_HOST: ${{ env.ip }}
        REMOTE_USER: root
        TARGET: /var/www/
        EXCLUDE: ".git"
        SCRIPT_AFTER: |
          echo $RSYNC_STDOUT
          cd /var/www/
          pwd
          ls -la
          docker compose up -d
